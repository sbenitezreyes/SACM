plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.5'
    id 'io.spring.dependency-management' version '1.1.7'
    id "org.sonarqube" version "6.3.1.5724"
}

group = 'co.proyecto'
version = '0.0.1-SNAPSHOT'

java {
    toolchain { languageVersion = JavaLanguageVersion.of(21) }
}

repositories { mavenCentral() }

ext { springdocVersion = '2.7.0' }

dependencies {
    // Web & Data
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // OpenAPI / Swagger
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springdocVersion}"

    // Flyway (n√∫cleo + soporte PostgreSQL)
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-database-postgresql'

    // Driver PostgreSQL
    runtimeOnly 'org.postgresql:postgresql'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.withType(Test).configureEach { useJUnitPlatform() }

tasks.withType(Test).configureEach {
    useJUnitPlatform()
}

sonarqube {
    properties {
        property "sonar.projectKey", "sbenitezreyes_SACM"
        property "sonar.organization", "sbenitezreyes-1"
    }
}
